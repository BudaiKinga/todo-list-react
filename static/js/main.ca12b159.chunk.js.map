{"version":3,"sources":["functionBased/components/TodoItem.module.css","functionBased/components/TodoItem.js","functionBased/components/TodoList.js","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/pages/SinglePage.js","functionBased/pages/About.js","functionBased/pages/NotMatch.js","functionBased/components/Navbar.js","functionBased/components/TodoContainer.js","index.js"],"names":["module","exports","TodoItem","props","useState","editing","setEditing","useEffect","console","log","todo","completed","id","title","viewMode","editMode","display","className","styles","item","onDoubleClick","style","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProps","color","fontSize","fontStyle","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","event","key","TodoList","todos","map","Header","padding","lineHeight","fontWeight","marginBottom","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addToDoProps","alert","placeholder","name","marginTop","SinglePage","useParams","slug","aboutContent","description","find","About","useRouteMatch","url","path","to","NotMatch","Navbar","gordulve","setGordulve","closeIt","text","link","activeClassName","exact","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","loadedTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.ca12b159.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__1g-0V\",\"checkbox\":\"TodoItem_checkbox__1j-5L\",\"textInput\":\"TodoItem_textInput__nzZOZ\"};","import React, { useState, useEffect } from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\nimport { FaTrash } from \"react-icons/fa\"\r\n\r\n\r\nconst TodoItem = props => {\r\n\r\n    const [editing, setEditing] = useState(false)\r\n\r\n\r\n    const handleEditing = () => {\r\n        setEditing(true)\r\n        console.log(\"Editing...\")\r\n    }\r\n\r\n    const handleUpdatedDone = event => {\r\n        if (event.key === \"Enter\") {\r\n            setEditing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log(\"Cleaning up...\")\r\n        }\r\n    }, [])\r\n\r\n\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#595959\",\r\n        opacity: 0.4,\r\n        textDecoration: \"line-through\",\r\n    }\r\n\r\n    const { completed, id, title } = props.todo\r\n\r\n\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    if (editing) {\r\n        viewMode.display = \"none\"\r\n    } else {\r\n        editMode.display = \"none\"\r\n    }\r\n\r\n    return (\r\n        // But if you prefer to have a hyphen in your class selector, then you should use the bracket notation (for instance, styles['new-class']) to reference the selector i\r\n        <li className={styles.item}>\r\n            <div onDoubleClick={handleEditing} style={viewMode}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className={styles.checkbox}\r\n                    checked={completed}\r\n                    onChange={() => props.handleChangeProps(id)}\r\n                />\r\n                <button onClick={() => props.deleteTodoProps(id)}>  <FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }} />\r\n                </button>\r\n                <span style={completed ? completedStyle : null}>{title}</span>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                style={editMode}\r\n                className={styles.textInput}\r\n                value={title}\r\n                onChange={e => {\r\n                    props.setUpdate(e.target.value, id)\r\n                }}\r\n                onKeyDown={handleUpdatedDone}\r\n            />\r\n        </li>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoItem\r\n","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\";\r\n\r\n\r\nconst TodoList = (props) => {\r\n\r\n    return (\r\n        /* since we are doing a map on todos (this.props.todos.maps) we must add key to avoid warning*/\r\n        <ul>\r\n            {props.todos.map(todo => (\r\n                <TodoItem\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodoProps={props.deleteTodoProps}\r\n                    setUpdate={props.setUpdate}\r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n    }\r\n\r\nexport default TodoList\r\n","import React from \"react\"\r\n\r\nconst Header = () => {\r\n\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"1.5em\",\r\n    }\r\n\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1\r\n                // inline styling: assign a java script object to the style attribute - this is react jsx\r\n                style={{\r\n                    fontSize: \"6rem\",\r\n                    fontWeight: \"600\",\r\n                    marginBottom: \"2rem\",\r\n                    lineHeight: \"1em\",\r\n                    color: \"#ececec\",\r\n                    textTransform: \"lowercase\",\r\n                    textAlign: \"center\",\r\n                }}\r\n            >\r\n            todos\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\"\r\nimport { FaPlusCircle } from \"react-icons/fa\"\r\n\r\n\r\nconst InputTodo = props => {\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\",\r\n    })\r\n\r\n    const onChange = e => {\r\n        setInputText(\r\n            {\r\n                ...inputText,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (inputText.title.trim()) {\r\n            props.addToDoProps(inputText.title)\r\n            setInputText({\r\n                title: \"\",\r\n            })\r\n        } else {\r\n            alert(\"Please write item\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"input-text\"\r\n                placeholder=\"Add todo...\"\r\n                value={inputText.title}\r\n                name=\"title\"\r\n                onChange={onChange}\r\n            />\r\n            <button className=\"input-submit\"><FaPlusCircle style={{ color: \"darkcyan\", fontSize: \"30px\", marginTop: \"2px\" }}\r\n            /></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputTodo","import React from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\n\r\nconst SinglePage = () => {\r\n    console.log(useParams())\r\n    const aboutData = [\r\n        {\r\n            slug: \"about-app\",\r\n            title: \"About the App\",\r\n            description:\r\n                \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n        },\r\n        {\r\n            slug: \"about-author\",\r\n            title: \"About the Author\",\r\n            description:\r\n                \"This app was developed by KBK team, developers coding mainly in Java. Contact us on kbk.sw.solutions@gmail.com\",\r\n        },\r\n    ]\r\n\r\n    const { slug } = useParams()\r\n    const aboutContent = aboutData.find(item => item.slug === slug)\r\n    const { title, description } = aboutContent\r\n\r\n\r\n    return <div>\r\n        <h1>{title}</h1>\r\n        <p>{description}</p>\r\n    </div>\r\n}\r\nexport default SinglePage","import React from \"react\"\r\nimport { useRouteMatch } from \"react-router-dom\"\r\nimport { Route, Link } from \"react-router-dom\"\r\nimport SinglePage from \"./SinglePage\"\r\n\r\n\r\nconst About = () => {\r\n    const { url, path } = useRouteMatch()\r\n\r\n    console.log(useRouteMatch())\r\n    return <div>\r\n        <ul>\r\n            <li>\r\n                <Link to={`${url}/about-app`}>About App</Link>\r\n            </li>\r\n            <li>\r\n                <Link to={`${url}/about-author`}>About Author</Link>\r\n            </li>\r\n        </ul>\r\n        <Route path={`${path}/:slug`}>\r\n            <SinglePage />\r\n        </Route>\r\n    </div>\r\n}\r\nexport default About","import React from \"react\"\r\n\r\nconst NotMatch = () => {\r\n    return (\r\n        <div>\r\n            <h3>No match for this page</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default NotMatch","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\nimport {AiFillFastForward, AiFillFastBackward} from \"react-icons/ai\"\r\n\r\n\r\nconst Navbar = () => {\r\n    const links = [\r\n        {\r\n            id: 1,\r\n            path: \"/\",\r\n            text: \"Home\",\r\n        },\r\n        {\r\n            id: 2,\r\n            path: \"/about\",\r\n            text: \"About\",\r\n        },\r\n    ]\r\n\r\n    const [gordulve, setGordulve] = useState(false)\r\n\r\n    const handleToggle = () => {\r\n        setGordulve(!gordulve)\r\n    }\r\n\r\n    const closeIt = () => { setGordulve(false) }\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <button onClick={handleToggle}>{gordulve ? <AiFillFastBackward/> : <AiFillFastForward/>}</button>\r\n\r\n            <ul className={`menuNav ${gordulve ? \" showMenu\" : \"\"}`}>\r\n                {links.map(link => {\r\n                    return (\r\n                        <li key={link.id}>\r\n                            <NavLink to={link.path} onClick={closeIt} activeClassName=\"active-link\" exact>\r\n\r\n                                {link.text}</NavLink>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar","import React, { useState, useEffect } from \"react\"\r\nimport TodoList from \"./TodoList\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport About from \"../pages/About\"\r\nimport NotMatch from \"../pages/NotMatch\"\r\nimport Navbar from \"./Navbar\"\r\n\r\n\r\n\r\nconst TodoContainer = (props) => {\r\n\r\n    function getInitialTodos() {\r\n        // getting stored items\r\n        const temp = localStorage.getItem(\"todos\")\r\n        const savedTodos = JSON.parse(temp)\r\n        return savedTodos || []\r\n    }\r\n\r\n    const [todos, setTodos] = useState(getInitialTodos());\r\n\r\n    const delTodo = (id) => {\r\n        setTodos([\r\n            ...todos.filter(todo => {\r\n                return todo.id !== id;\r\n            })\r\n        ])\r\n        console.log(\"Deleting \", id);\r\n    }\r\n\r\n    const handleChange = (id) => {\r\n        setTodos(prevState =>\r\n            prevState.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    }\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n\r\n        console.log(\"clicked\", id);\r\n    }\r\n\r\n    const addToDoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        };\r\n        setTodos(\r\n            [...todos, newTodo]\r\n        );\r\n        console.log(\"added to do item signal reached the parent (container)\", title);\r\n    }\r\n\r\n    const setUpdate = (updatedTitle, id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.title = updatedTitle\r\n                }\r\n                return todo\r\n            })\r\n\r\n        )\r\n        console.log(updatedTitle, id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"test run\")\r\n\r\n        // getting stored items\r\n        const temp = localStorage.getItem(\"todos\")\r\n        const loadedTodos = JSON.parse(temp)\r\n\r\n        if (loadedTodos) {\r\n            setTodos(loadedTodos)\r\n        }\r\n    }, [setTodos])\r\n\r\n    useEffect(() => {\r\n        // storing todos items\r\n        const temp = JSON.stringify(todos)\r\n        localStorage.setItem(\"todos\", temp)\r\n    }, [todos])\r\n\r\n    return (\r\n        <>\r\n        <Navbar />\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                {/* in HTML, we add CSS classes to elements using the class syntax. But in React JSX, we make use of a special syntax called className. */}\r\n                <div className=\"container\">\r\n                    <div className=\"inner\">\r\n                        <Header />\r\n                        <InputTodo addToDoProps={addToDoItem}></InputTodo>\r\n                        <TodoList todos={todos}\r\n                            handleChangeProps={handleChange}\r\n                            deleteTodoProps={delTodo}\r\n                            setUpdate={setUpdate}\r\n                        >\r\n                        </TodoList>\r\n                    </div>\r\n                </div>\r\n            </Route>\r\n            <Route path=\"/about\">\r\n                <About />\r\n            </Route>\r\n            <Route path=\"*\">\r\n                <NotMatch />\r\n            </Route>\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\nexport default TodoContainer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n//component file\nimport TodoContainer from \"./functionBased/components/TodoContainer\"\n\n//stylesheet\nimport \"./functionBased/App.css\"\n\n// routing\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <BrowserRouter>\n  //     <TodoContainer />\n  //   </BrowserRouter>\n  // </React.StrictMode>,\n  \n  // !!!The value assigned to the basename is the subdirectory name (which is the repository name)\n  <Router basename={process.env.PUBLIC_URL}>\n    <TodoContainer />\n  </Router>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}